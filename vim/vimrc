" --- Bootstrap ---------------------------------------------------------- {{{

set nocompatible

" Vim 8 adds support for loading packages from the pack/ subdirectory.
" Use Pathogen to backport this to older versions of Vim.
" [Help: packages]
if has('packages') ==# 0
  execute pathogen#infect()
end

if has('unix')
  let shell = '/usr/bin/env bash'
end

" Leader characters for mappings
let mapleader=' '
let maplocalleader='\\'

syntax enable
filetype plugin indent on

" }}}
" --- Appearance --------------------------------------------------------- {{{

set background=dark
if has('gui')
  colors base16-eighties
else
  colors elflord
endif

" Show line numbers
set number numberwidth=4

" Set the command line height
set cmdheight=1

" Show the tabs at the top unless there is only one tab
set showtabline=1

" }}}
" --- Spaces and indentation --------------------------------------------- {{{

set smartindent

set tabstop=2 softtabstop=2 shiftwidth=2
set shiftround
autocmd FileType go,make,python,sshconfig
      \ setlocal tabstop=4 softtabstop=4 shiftwidth=4
autocmd FileType c,cpp
      \ setlocal tabstop=8 softtabstop=8 shiftwidth=8

set expandtab
autocmd FileType c,cpp,gitconfig,go,make,sshconfig,uxntal
      \ setlocal noexpandtab

set list
set listchars=tab:Â·\ ,trail:.,extends:>,precedes:<,nbsp:+
autocmd FileType c,cpp,go,make,sshconfig,uxntal
      \ setlocal nolist

function SetIndent(width)
  let &l:tabstop = a:width
  let &l:softtabstop = a:width
  let &l:shiftwidth = a:width
endfunction
nnoremap <Leader><Tab>2 :call SetIndent(2)<CR>
nnoremap <Leader><Tab>4 :call SetIndent(4)<CR>
nnoremap <Leader><Tab>8 :call SetIndent(8)<CR>

function DeleteTrailingSpaces()
  execute '%s/\s\+$//e'
  execute 'nohlsearch'
endfunction
nnoremap <Leader>d$ :call DeleteTrailingSpaces()<CR>

" Mapping to Toggle expandtab and revealing whitespace
nnoremap <Leader><Tab>t :setlocal expandtab!<CR>:setlocal expandtab?<CR>
nnoremap <Leader><Tab>l :setlocal list!<CR>:setlocal list?<CR>

" Replace non-breaking spaces. (These are easy to insert by mistake on macOS
" by pressing Alt-Space.)
nnoremap <Leader>d<Space> :%s:[\u00A0]:\ :eg<CR>:noh<CR>

" }}}
" --- Filetype settings -------------------------------------------------- {{{

autocmd FileType c setlocal textwidth=80 colorcolumn=+1
autocmd FileType gitcommit setlocal colorcolumn=51,73
autocmd FileType markdown setlocal nosmartindent textwidth=79
      \ formatoptions=tcroqn2 comments=n:>
      \ path=.,./**/*,, includeexpr=substitute(v:fname,'$','.md','')
autocmd FileType tex,plaintex setlocal textwidth=79
autocmd FileType text setlocal textwidth=79 formatoptions-=n
autocmd FileType vim setlocal foldmethod=marker

let g:markdown_fenced_languages = ['ruby', 'sh']

let g:recutils_no_folding = 1

" }}}
" --- Editing & navigation ----------------------------------------------- {{{

" Exit insert mode
inoremap <C-j> <Esc>

" Convert the current word to uppercase.
inoremap <C-u> viwU
nnoremap <C-u> <Esc>viwUi

" Edit and reload vimrc
nnoremap <Leader>ev :split $MYVIMRC<CR>
nnoremap <Leader>sv :source $MYVIMRC<CR>

" Alt-Space on macOS produces a non-breaking space
noremap! <M-Space> <Space>

" Insert the current date and time
inoremap <C-d><CR> <C-r>=strftime("%F %H:%M")<CR>

" }}}
" --- Buffers and tabs --------------------------------------------------- {{{

" set hidden
" set switchbuf=usetab,newtab

" Switch windows
nnoremap <Tab><Tab> <C-w><C-w>

" Previous/next buffer
nnoremap <Leader>[ :bn<CR>
nnoremap <Leader>] :bp<CR>

" New tab
nnoremap <Leader>t :tabnew<Space>
nnoremap <Leader>nt :tabnew<CR>
" Previous/next tab
nnoremap <Leader>{ gT
nnoremap <Leader>} gt

" Open all buffers in tabs
nnoremap <Leader>bt :tab sball<CR>

" }}}
" --- Netrw (file browser) ----------------------------------------------- {{{
" Help: netrw

" Remove the banner. (Press I to toggle.)
let g:netrw_banner = 0

" Use a tree view by default. (Press i to cycle through the view types.)
let g:netrw_liststyle = 3

" Open files in a new tab.
" let g:netrw_browse_split = 3

" Set the % width when opened in a vertical split (with :Vexplore).
let g:netrw_winsize = 25

" }}}
" --- Plugin: easy-align ------------------------------------------------- {{{
" Help: vim-easy-align

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" }}}
" --- Plugin: lightline -------------------------------------------------- {{{

set noshowmode

let g:lightline = {
  \ 'colorscheme': 'inkygrey',
  \ }

" }}}
" --- Plugin: syntastic -------------------------------------------------- {{{

" Recommended defaults for new users
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0

" }}}
" --- Old settings ------------------------------------------------------- {{{

set noshortname ff=unix ffs=unix,dos
set nohlsearch ignorecase smartcase
set nomodeline
set showmatch
set viminfo="" nobackup writebackup

" Allow mouse in all modes
set mouse=a

" Make some messages less verbose
set shm=flmnrxoOstTI

" Keep the cursor near the middle
set scrolloff=5

set textwidth=0 wrap nojoinspaces linebreak
set foldcolumn=0
set nospell spelllang=en

" Format options:
"   c - auto-wrap comments
"   r - add comment leader after hitting Enter in insert mode
"   q - allow formatting comments with gq
"   n - format numbered lists
"   l - don't break long lines in insert mode if the line was long when the
"       insert command started
"   1 - don't break the line after a one-letter word
"   j - remove comment leader when joining lines
set formatoptions+=crqnl1j

" Indent wrapped lines
if has('linebreak')
  set showbreak=.. breakindent breakindentopt=shift:4,sbr
endif

" Keep swap files in a separate location
set directory=~/.vim/tmp,/var/tmp/$USER

" macOS
if has('osx')
  set backupskip=/tmp/*,/private/tmp/*
  set t_kb=  " Ctrl-V Backspace
  fixdel
end

" https://github.com/tmux/tmux/issues/543#issuecomment-248980734
set clipboard=unnamed

" Easy command line
nnoremap <Leader><Space> :

" Toggle paste mode
set pastetoggle=<F4>

" scroll by visual lines (easier to edit wrapped text)
nnoremap <Down> gj
nnoremap <Up>   gk
vnoremap <Down> gj
vnoremap <Up>   gk

" }}}
